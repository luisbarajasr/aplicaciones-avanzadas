// Code generated by gocc; DO NOT EDIT.

package parser

type (
	actionTable [numStates]actionRow
	actionRow   struct {
		canRecover bool
		actions    [numSymbols]action
	}
)

var actionTab = actionTable{
	actionRow{ // S0
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			shift(3), // program
			nil,      // id
			nil,      // semicolon
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // lparen
			nil,      // rparen
			nil,      // lbracket
			nil,      // rbracket
			nil,      // void
			nil,      // int
			nil,      // float
			nil,      // lbrace
			nil,      // rbrace
			nil,      // assign
			nil,      // if
			nil,      // else
			nil,      // while
			nil,      // do
			nil,      // print
			nil,      // cte_string
			nil,      // greater
			nil,      // less
			nil,      // notequal
			nil,      // plus
			nil,      // minus
			nil,      // times
			nil,      // divide
			nil,      // cte_int
			nil,      // cte_float
		},
	},
	actionRow{ // S1
		canRecover: false,
		actions: [numSymbols]action{
			nil,          // INVALID
			accept(true), // ␚
			nil,          // program
			nil,          // id
			nil,          // semicolon
			nil,          // main
			nil,          // end
			nil,          // empty
			nil,          // var
			nil,          // colon
			nil,          // comma
			nil,          // lparen
			nil,          // rparen
			nil,          // lbracket
			nil,          // rbracket
			nil,          // void
			nil,          // int
			nil,          // float
			nil,          // lbrace
			nil,          // rbrace
			nil,          // assign
			nil,          // if
			nil,          // else
			nil,          // while
			nil,          // do
			nil,          // print
			nil,          // cte_string
			nil,          // greater
			nil,          // less
			nil,          // notequal
			nil,          // plus
			nil,          // minus
			nil,          // times
			nil,          // divide
			nil,          // cte_int
			nil,          // cte_float
		},
	},
	actionRow{ // S2
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(1), // ␚, reduce: Start
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S3
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // program
			shift(4), // id
			nil,      // semicolon
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // lparen
			nil,      // rparen
			nil,      // lbracket
			nil,      // rbracket
			nil,      // void
			nil,      // int
			nil,      // float
			nil,      // lbrace
			nil,      // rbrace
			nil,      // assign
			nil,      // if
			nil,      // else
			nil,      // while
			nil,      // do
			nil,      // print
			nil,      // cte_string
			nil,      // greater
			nil,      // less
			nil,      // notequal
			nil,      // plus
			nil,      // minus
			nil,      // times
			nil,      // divide
			nil,      // cte_int
			nil,      // cte_float
		},
	},
	actionRow{ // S4
		canRecover: false,
		actions: [numSymbols]action{
			nil,      // INVALID
			nil,      // ␚
			nil,      // program
			nil,      // id
			shift(5), // semicolon
			nil,      // main
			nil,      // end
			nil,      // empty
			nil,      // var
			nil,      // colon
			nil,      // comma
			nil,      // lparen
			nil,      // rparen
			nil,      // lbracket
			nil,      // rbracket
			nil,      // void
			nil,      // int
			nil,      // float
			nil,      // lbrace
			nil,      // rbrace
			nil,      // assign
			nil,      // if
			nil,      // else
			nil,      // while
			nil,      // do
			nil,      // print
			nil,      // cte_string
			nil,      // greater
			nil,      // less
			nil,      // notequal
			nil,      // plus
			nil,      // minus
			nil,      // times
			nil,      // divide
			nil,      // cte_int
			nil,      // cte_float
		},
	},
	actionRow{ // S5
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(4), // main, reduce: VarsOp
			nil,       // end
			nil,       // empty
			shift(8),  // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			reduce(4), // void, reduce: VarsOp
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S6
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(13), // main, reduce: FuncLoop
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			shift(12),  // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S7
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(3), // main, reduce: VarsOp
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			reduce(3), // void, reduce: VarsOp
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S8
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(13), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S9
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			shift(16), // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S10
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(13), // main, reduce: FuncLoop
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			shift(12),  // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S11
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			shift(18), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S12
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(19), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S13
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(9), // colon, reduce: AddVarId
			reduce(9), // comma, reduce: AddVarId
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S14
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(13),  // id
			nil,        // semicolon
			reduce(11), // main, reduce: VarsPrime
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			reduce(11), // void, reduce: VarsPrime
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S15
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(8), // colon, reduce: MasId
			shift(24), // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S16
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			shift(26), // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S17
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(12), // main, reduce: FuncLoop
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S18
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(27),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(17), // rparen, reduce: Params
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S19
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			reduce(15), // lparen, reduce: RegisterFunc
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S20
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(10), // main, reduce: VarsPrime
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			reduce(10), // void, reduce: VarsPrime
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S21
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(5), // main, reduce: Vars
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			reduce(5), // void, reduce: Vars
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S22
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(8), // colon, reduce: MasId
			shift(24), // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S23
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			shift(31), // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S24
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(13), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S25
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			shift(33), // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S26
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(34),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(26), // rbrace, reduce: StateDeclare
			nil,        // assign
			shift(42),  // if
			nil,        // else
			shift(43),  // while
			nil,        // do
			shift(44),  // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S27
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			shift(45), // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S28
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			shift(46), // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S29
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(47),  // comma
			nil,        // lparen
			reduce(20), // rparen, reduce: MoreParam
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S30
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			shift(49), // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S31
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			shift(51), // void
			shift(52), // int
			shift(53), // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S32
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(8), // colon, reduce: MasId
			shift(24), // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S33
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			reduce(2), // ␚, reduce: Program
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S34
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			shift(55), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			shift(56), // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S35
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			shift(57), // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S36
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(34),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(26), // rbrace, reduce: StateDeclare
			nil,        // assign
			shift(42),  // if
			nil,        // else
			shift(43),  // while
			nil,        // do
			shift(44),  // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S37
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(27), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(27), // rbrace, reduce: Statement
			nil,        // assign
			reduce(27), // if, reduce: Statement
			nil,        // else
			reduce(27), // while, reduce: Statement
			nil,        // do
			reduce(27), // print, reduce: Statement
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S38
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(28), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(28), // rbrace, reduce: Statement
			nil,        // assign
			reduce(28), // if, reduce: Statement
			nil,        // else
			reduce(28), // while, reduce: Statement
			nil,        // do
			reduce(28), // print, reduce: Statement
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S39
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(29), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(29), // rbrace, reduce: Statement
			nil,        // assign
			reduce(29), // if, reduce: Statement
			nil,        // else
			reduce(29), // while, reduce: Statement
			nil,        // do
			reduce(29), // print, reduce: Statement
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S40
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(30), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(30), // rbrace, reduce: Statement
			nil,        // assign
			reduce(30), // if, reduce: Statement
			nil,        // else
			reduce(30), // while, reduce: Statement
			nil,        // do
			reduce(30), // print, reduce: Statement
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S41
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(31), // id, reduce: Statement
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(31), // rbrace, reduce: Statement
			nil,        // assign
			reduce(31), // if, reduce: Statement
			nil,        // else
			reduce(31), // while, reduce: Statement
			nil,        // do
			reduce(31), // print, reduce: Statement
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S42
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			shift(59), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S43
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			shift(60), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S44
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			shift(61), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S45
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			shift(63), // void
			shift(64), // int
			shift(65), // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S46
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			shift(66), // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S47
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(27), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S48
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(16), // rparen, reduce: Params
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S49
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			shift(51), // void
			shift(52), // int
			shift(53), // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S50
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			shift(69), // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S51
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(23), // semicolon, reduce: Type
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S52
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(21), // semicolon, reduce: Type
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S53
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(22), // semicolon, reduce: Type
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S54
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(7), // colon, reduce: MasId
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S55
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(70),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			reduce(39), // rparen, reduce: ArgList
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(82),  // cte_int
			shift(83),  // cte_float
		},
	},
	actionRow{ // S56
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(84), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			shift(71), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			shift(80), // plus
			shift(81), // minus
			nil,       // times
			nil,       // divide
			shift(92), // cte_int
			shift(93), // cte_float
		},
	},
	actionRow{ // S57
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			reduce(24), // end, reduce: Body
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S58
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(25), // rbrace, reduce: StateDeclare
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S59
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S60
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S61
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(70),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			shift(108), // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(82),  // cte_int
			shift(83),  // cte_float
		},
	},
	actionRow{ // S62
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(18), // comma, reduce: ParamIndiv
			nil,        // lparen
			reduce(18), // rparen, reduce: ParamIndiv
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S63
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(23), // comma, reduce: Type
			nil,        // lparen
			reduce(23), // rparen, reduce: Type
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S64
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(21), // comma, reduce: Type
			nil,        // lparen
			reduce(21), // rparen, reduce: Type
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S65
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(22), // comma, reduce: Type
			nil,        // lparen
			reduce(22), // rparen, reduce: Type
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S66
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			shift(110), // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S67
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(47),  // comma
			nil,        // lparen
			reduce(20), // rparen, reduce: MoreParam
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S68
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(112), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S69
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			reduce(6), // id, reduce: Variable
			nil,       // semicolon
			reduce(6), // main, reduce: Variable
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			reduce(6), // void, reduce: Variable
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S70
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(54), // comma, reduce: Factor
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S71
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(56), // id, reduce: Agregar_Paren
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			reduce(56), // lparen, reduce: Agregar_Paren
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(56), // plus, reduce: Agregar_Paren
			reduce(56), // minus, reduce: Agregar_Paren
			nil,        // times
			nil,        // divide
			reduce(56), // cte_int, reduce: Agregar_Paren
			reduce(56), // cte_float, reduce: Agregar_Paren
		},
	},
	actionRow{ // S72
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(113), // comma
			nil,        // lparen
			reduce(41), // rparen, reduce: MoreCall
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S73
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(115), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S74
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(59), // comma, reduce: MoreExpresion
			nil,        // lparen
			reduce(59), // rparen, reduce: MoreExpresion
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			shift(118), // greater
			shift(119), // less
			shift(120), // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S75
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(64), // comma, reduce: MoreExp
			nil,        // lparen
			reduce(64), // rparen, reduce: MoreExp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(64), // greater, reduce: MoreExp
			reduce(64), // less, reduce: MoreExp
			reduce(64), // notequal, reduce: MoreExp
			shift(123), // plus
			shift(124), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S76
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(68), // comma, reduce: MoreTermino
			nil,        // lparen
			reduce(68), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(68), // greater, reduce: MoreTermino
			reduce(68), // less, reduce: MoreTermino
			reduce(68), // notequal, reduce: MoreTermino
			reduce(68), // plus, reduce: MoreTermino
			reduce(68), // minus, reduce: MoreTermino
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S77
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S78
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(130), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(82),  // cte_int
			shift(83),  // cte_float
		},
	},
	actionRow{ // S79
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: Factor
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S80
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(65), // id, reduce: Plus_Minus
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			reduce(65), // cte_int, reduce: Plus_Minus
			reduce(65), // cte_float, reduce: Plus_Minus
		},
	},
	actionRow{ // S81
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(66), // id, reduce: Plus_Minus
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			reduce(66), // cte_int, reduce: Plus_Minus
			reduce(66), // cte_float, reduce: Plus_Minus
		},
	},
	actionRow{ // S82
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(71), // comma, reduce: Cte
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S83
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(72), // comma, reduce: Cte
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S84
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(54), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S85
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(132), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S86
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(59), // semicolon, reduce: MoreExpresion
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			shift(118), // greater
			shift(119), // less
			shift(120), // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S87
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(64), // semicolon, reduce: MoreExp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(64), // greater, reduce: MoreExp
			reduce(64), // less, reduce: MoreExp
			reduce(64), // notequal, reduce: MoreExp
			shift(123), // plus
			shift(124), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S88
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(68), // semicolon, reduce: MoreTermino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(68), // greater, reduce: MoreTermino
			reduce(68), // less, reduce: MoreTermino
			reduce(68), // notequal, reduce: MoreTermino
			reduce(68), // plus, reduce: MoreTermino
			reduce(68), // minus, reduce: MoreTermino
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S89
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S90
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(140), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(92),  // cte_int
			shift(93),  // cte_float
		},
	},
	actionRow{ // S91
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S92
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(71), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S93
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(72), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S94
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S95
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(142), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S96
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(59), // rparen, reduce: MoreExpresion
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			shift(118), // greater
			shift(119), // less
			shift(120), // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S97
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(64), // rparen, reduce: MoreExp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(64), // greater, reduce: MoreExp
			reduce(64), // less, reduce: MoreExp
			reduce(64), // notequal, reduce: MoreExp
			shift(123), // plus
			shift(124), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S98
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(68), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(68), // greater, reduce: MoreTermino
			reduce(68), // less, reduce: MoreTermino
			reduce(68), // notequal, reduce: MoreTermino
			reduce(68), // plus, reduce: MoreTermino
			reduce(68), // minus, reduce: MoreTermino
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S99
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S100
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(150), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S101
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S102
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S103
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S104
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(152), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S105
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(44), // comma, reduce: PrintItem
			nil,        // lparen
			reduce(44), // rparen, reduce: PrintItem
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S106
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(153), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S107
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(154), // comma
			nil,        // lparen
			reduce(47), // rparen, reduce: MorePrint
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S108
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(45), // comma, reduce: PrintItem
			nil,        // lparen
			reduce(45), // rparen, reduce: PrintItem
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S109
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			shift(157), // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S110
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(13), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S111
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(19), // rparen, reduce: MoreParam
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S112
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			reduce(6), // main, reduce: Variable
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			reduce(6), // void, reduce: Variable
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S113
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			shift(70), // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			shift(71), // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			shift(80), // plus
			shift(81), // minus
			nil,       // times
			nil,       // divide
			shift(82), // cte_int
			shift(83), // cte_float
		},
	},
	actionRow{ // S114
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(38), // rparen, reduce: ArgList
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S115
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(161), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S116
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(48), // comma, reduce: Expresion
			nil,        // lparen
			reduce(48), // rparen, reduce: Expresion
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S117
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(162), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(169), // cte_int
			shift(170), // cte_float
		},
	},
	actionRow{ // S118
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(60), // id, reduce: Greater_Less_NotEqual
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			reduce(60), // lparen, reduce: Greater_Less_NotEqual
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(60), // plus, reduce: Greater_Less_NotEqual
			reduce(60), // minus, reduce: Greater_Less_NotEqual
			nil,        // times
			nil,        // divide
			reduce(60), // cte_int, reduce: Greater_Less_NotEqual
			reduce(60), // cte_float, reduce: Greater_Less_NotEqual
		},
	},
	actionRow{ // S119
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(61), // id, reduce: Greater_Less_NotEqual
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			reduce(61), // lparen, reduce: Greater_Less_NotEqual
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(61), // plus, reduce: Greater_Less_NotEqual
			reduce(61), // minus, reduce: Greater_Less_NotEqual
			nil,        // times
			nil,        // divide
			reduce(61), // cte_int, reduce: Greater_Less_NotEqual
			reduce(61), // cte_float, reduce: Greater_Less_NotEqual
		},
	},
	actionRow{ // S120
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(62), // id, reduce: Greater_Less_NotEqual
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			reduce(62), // lparen, reduce: Greater_Less_NotEqual
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(62), // plus, reduce: Greater_Less_NotEqual
			reduce(62), // minus, reduce: Greater_Less_NotEqual
			nil,        // times
			nil,        // divide
			reduce(62), // cte_int, reduce: Greater_Less_NotEqual
			reduce(62), // cte_float, reduce: Greater_Less_NotEqual
		},
	},
	actionRow{ // S121
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(49), // comma, reduce: Exp
			nil,        // lparen
			reduce(49), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(49), // greater, reduce: Exp
			reduce(49), // less, reduce: Exp
			reduce(49), // notequal, reduce: Exp
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S122
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(171), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(177), // cte_int
			shift(178), // cte_float
		},
	},
	actionRow{ // S123
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(65), // id, reduce: Plus_Minus
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			reduce(65), // lparen, reduce: Plus_Minus
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(65), // plus, reduce: Plus_Minus
			reduce(65), // minus, reduce: Plus_Minus
			nil,        // times
			nil,        // divide
			reduce(65), // cte_int, reduce: Plus_Minus
			reduce(65), // cte_float, reduce: Plus_Minus
		},
	},
	actionRow{ // S124
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(66), // id, reduce: Plus_Minus
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			reduce(66), // lparen, reduce: Plus_Minus
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(66), // plus, reduce: Plus_Minus
			reduce(66), // minus, reduce: Plus_Minus
			nil,        // times
			nil,        // divide
			reduce(66), // cte_int, reduce: Plus_Minus
			reduce(66), // cte_float, reduce: Plus_Minus
		},
	},
	actionRow{ // S125
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: Termino
			nil,        // lparen
			reduce(50), // rparen, reduce: Termino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // greater, reduce: Termino
			reduce(50), // less, reduce: Termino
			reduce(50), // notequal, reduce: Termino
			reduce(50), // plus, reduce: Termino
			reduce(50), // minus, reduce: Termino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S126
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(179), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(184), // cte_int
			shift(185), // cte_float
		},
	},
	actionRow{ // S127
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(69), // id, reduce: Times_Div
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			reduce(69), // lparen, reduce: Times_Div
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(69), // plus, reduce: Times_Div
			reduce(69), // minus, reduce: Times_Div
			nil,        // times
			nil,        // divide
			reduce(69), // cte_int, reduce: Times_Div
			reduce(69), // cte_float, reduce: Times_Div
		},
	},
	actionRow{ // S128
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(70), // id, reduce: Times_Div
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			reduce(70), // lparen, reduce: Times_Div
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(70), // plus, reduce: Times_Div
			reduce(70), // minus, reduce: Times_Div
			nil,        // times
			nil,        // divide
			reduce(70), // cte_int, reduce: Times_Div
			reduce(70), // cte_float, reduce: Times_Div
		},
	},
	actionRow{ // S129
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(186), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S130
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: Factor
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S131
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(53), // comma, reduce: Factor
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S132
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(32), // id, reduce: Assign
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(32), // rbrace, reduce: Assign
			nil,        // assign
			reduce(32), // if, reduce: Assign
			nil,        // else
			reduce(32), // while, reduce: Assign
			nil,        // do
			reduce(32), // print, reduce: Assign
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S133
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(48), // semicolon, reduce: Expresion
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S134
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(188), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(195), // cte_int
			shift(196), // cte_float
		},
	},
	actionRow{ // S135
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(49), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(49), // greater, reduce: Exp
			reduce(49), // less, reduce: Exp
			reduce(49), // notequal, reduce: Exp
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S136
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(197), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(203), // cte_int
			shift(204), // cte_float
		},
	},
	actionRow{ // S137
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: Termino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // greater, reduce: Termino
			reduce(50), // less, reduce: Termino
			reduce(50), // notequal, reduce: Termino
			reduce(50), // plus, reduce: Termino
			reduce(50), // minus, reduce: Termino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S138
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(205), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(210), // cte_int
			shift(211), // cte_float
		},
	},
	actionRow{ // S139
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(212), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S140
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S141
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(53), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S142
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			shift(215), // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S143
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(48), // rparen, reduce: Expresion
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S144
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(216), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(223), // cte_int
			shift(224), // cte_float
		},
	},
	actionRow{ // S145
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(49), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(49), // greater, reduce: Exp
			reduce(49), // less, reduce: Exp
			reduce(49), // notequal, reduce: Exp
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S146
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(225), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(231), // cte_int
			shift(232), // cte_float
		},
	},
	actionRow{ // S147
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(50), // rparen, reduce: Termino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // greater, reduce: Termino
			reduce(50), // less, reduce: Termino
			reduce(50), // notequal, reduce: Termino
			reduce(50), // plus, reduce: Termino
			reduce(50), // minus, reduce: Termino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S148
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(233), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(238), // cte_int
			shift(239), // cte_float
		},
	},
	actionRow{ // S149
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(240), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S150
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S151
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S152
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			shift(242), // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S153
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(243), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S154
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(70),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			shift(108), // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(82),  // cte_int
			shift(83),  // cte_float
		},
	},
	actionRow{ // S155
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(43), // rparen, reduce: PrintList
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S156
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			shift(245), // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S157
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(34),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(26), // rbrace, reduce: StateDeclare
			nil,        // assign
			shift(42),  // if
			nil,        // else
			shift(43),  // while
			nil,        // do
			shift(44),  // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S158
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(13),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			reduce(11), // lbrace, reduce: VarsPrime
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S159
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(8), // colon, reduce: MasId
			shift(24), // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S160
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(113), // comma
			nil,        // lparen
			reduce(41), // rparen, reduce: MoreCall
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S161
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(37), // id, reduce: FuncCall
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(37), // rbrace, reduce: FuncCall
			nil,        // assign
			reduce(37), // if, reduce: FuncCall
			nil,        // else
			reduce(37), // while, reduce: FuncCall
			nil,        // do
			reduce(37), // print, reduce: FuncCall
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S162
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(54), // comma, reduce: Factor
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S163
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(58), // comma, reduce: MoreExpresion
			nil,        // lparen
			reduce(58), // rparen, reduce: MoreExpresion
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S164
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(64), // comma, reduce: MoreExp
			nil,        // lparen
			reduce(64), // rparen, reduce: MoreExp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(123), // plus
			shift(124), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S165
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(68), // comma, reduce: MoreTermino
			nil,        // lparen
			reduce(68), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(68), // plus, reduce: MoreTermino
			reduce(68), // minus, reduce: MoreTermino
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S166
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S167
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(257), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(169), // cte_int
			shift(170), // cte_float
		},
	},
	actionRow{ // S168
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: Factor
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S169
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(71), // comma, reduce: Cte
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S170
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(72), // comma, reduce: Cte
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S171
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(54), // comma, reduce: Factor
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S172
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(63), // comma, reduce: MoreExp
			nil,        // lparen
			reduce(63), // rparen, reduce: MoreExp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(63), // greater, reduce: MoreExp
			reduce(63), // less, reduce: MoreExp
			reduce(63), // notequal, reduce: MoreExp
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S173
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(68), // comma, reduce: MoreTermino
			nil,        // lparen
			reduce(68), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(68), // greater, reduce: MoreTermino
			reduce(68), // less, reduce: MoreTermino
			reduce(68), // notequal, reduce: MoreTermino
			nil,        // plus
			nil,        // minus
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S174
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S175
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(262), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(177), // cte_int
			shift(178), // cte_float
		},
	},
	actionRow{ // S176
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: Factor
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S177
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(71), // comma, reduce: Cte
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S178
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(72), // comma, reduce: Cte
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S179
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(54), // comma, reduce: Factor
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S180
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(67), // comma, reduce: MoreTermino
			nil,        // lparen
			reduce(67), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(67), // greater, reduce: MoreTermino
			reduce(67), // less, reduce: MoreTermino
			reduce(67), // notequal, reduce: MoreTermino
			reduce(67), // plus, reduce: MoreTermino
			reduce(67), // minus, reduce: MoreTermino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S181
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S182
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(265), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(184), // cte_int
			shift(185), // cte_float
		},
	},
	actionRow{ // S183
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: Factor
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S184
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(71), // comma, reduce: Cte
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S185
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(72), // comma, reduce: Cte
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S186
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: Terminar_Paren
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S187
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(51), // comma, reduce: Factor
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S188
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(54), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S189
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(58), // semicolon, reduce: MoreExpresion
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S190
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(64), // semicolon, reduce: MoreExp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(123), // plus
			shift(124), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S191
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(68), // semicolon, reduce: MoreTermino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(68), // plus, reduce: MoreTermino
			reduce(68), // minus, reduce: MoreTermino
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S192
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S193
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(272), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(195), // cte_int
			shift(196), // cte_float
		},
	},
	actionRow{ // S194
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S195
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(71), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S196
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(72), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S197
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(54), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S198
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(63), // semicolon, reduce: MoreExp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(63), // greater, reduce: MoreExp
			reduce(63), // less, reduce: MoreExp
			reduce(63), // notequal, reduce: MoreExp
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S199
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(68), // semicolon, reduce: MoreTermino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(68), // greater, reduce: MoreTermino
			reduce(68), // less, reduce: MoreTermino
			reduce(68), // notequal, reduce: MoreTermino
			nil,        // plus
			nil,        // minus
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S200
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S201
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(277), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(203), // cte_int
			shift(204), // cte_float
		},
	},
	actionRow{ // S202
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S203
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(71), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S204
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(72), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S205
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(54), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S206
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(67), // semicolon, reduce: MoreTermino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(67), // greater, reduce: MoreTermino
			reduce(67), // less, reduce: MoreTermino
			reduce(67), // notequal, reduce: MoreTermino
			reduce(67), // plus, reduce: MoreTermino
			reduce(67), // minus, reduce: MoreTermino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S207
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S208
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(280), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(210), // cte_int
			shift(211), // cte_float
		},
	},
	actionRow{ // S209
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S210
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(71), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S211
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(72), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S212
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: Terminar_Paren
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S213
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(51), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S214
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(35), // semicolon, reduce: ElseBody
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			shift(283), // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S215
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(34),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(26), // rbrace, reduce: StateDeclare
			nil,        // assign
			shift(42),  // if
			nil,        // else
			shift(43),  // while
			nil,        // do
			shift(44),  // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S216
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S217
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(58), // rparen, reduce: MoreExpresion
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S218
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(64), // rparen, reduce: MoreExp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(123), // plus
			shift(124), // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S219
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(68), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(68), // plus, reduce: MoreTermino
			reduce(68), // minus, reduce: MoreTermino
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S220
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S221
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(290), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(223), // cte_int
			shift(224), // cte_float
		},
	},
	actionRow{ // S222
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S223
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S224
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S225
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S226
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(63), // rparen, reduce: MoreExp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(63), // greater, reduce: MoreExp
			reduce(63), // less, reduce: MoreExp
			reduce(63), // notequal, reduce: MoreExp
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S227
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(68), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(68), // greater, reduce: MoreTermino
			reduce(68), // less, reduce: MoreTermino
			reduce(68), // notequal, reduce: MoreTermino
			nil,        // plus
			nil,        // minus
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S228
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S229
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(295), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(231), // cte_int
			shift(232), // cte_float
		},
	},
	actionRow{ // S230
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S231
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S232
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S233
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S234
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(67), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(67), // greater, reduce: MoreTermino
			reduce(67), // less, reduce: MoreTermino
			reduce(67), // notequal, reduce: MoreTermino
			reduce(67), // plus, reduce: MoreTermino
			reduce(67), // minus, reduce: MoreTermino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S235
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S236
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(298), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(238), // cte_int
			shift(239), // cte_float
		},
	},
	actionRow{ // S237
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S238
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S239
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S240
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S241
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S242
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			shift(301), // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S243
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(42), // id, reduce: Print
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(42), // rbrace, reduce: Print
			nil,        // assign
			reduce(42), // if, reduce: Print
			nil,        // else
			reduce(42), // while, reduce: Print
			nil,        // do
			reduce(42), // print, reduce: Print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S244
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			shift(154), // comma
			nil,        // lparen
			reduce(47), // rparen, reduce: MorePrint
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S245
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(303), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S246
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			shift(304), // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S247
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			reduce(10), // lbrace, reduce: VarsPrime
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S248
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			reduce(5), // lbrace, reduce: Vars
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S249
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			reduce(8), // colon, reduce: MasId
			shift(24), // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S250
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			shift(306), // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S251
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(40), // rparen, reduce: MoreCall
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S252
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(49), // comma, reduce: Exp
			nil,        // lparen
			reduce(49), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S253
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(307), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(313), // cte_int
			shift(314), // cte_float
		},
	},
	actionRow{ // S254
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: Termino
			nil,        // lparen
			reduce(50), // rparen, reduce: Termino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(50), // plus, reduce: Termino
			reduce(50), // minus, reduce: Termino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S255
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(315), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(320), // cte_int
			shift(321), // cte_float
		},
	},
	actionRow{ // S256
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(322), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S257
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: Factor
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S258
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(53), // comma, reduce: Factor
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S259
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: Termino
			nil,        // lparen
			reduce(50), // rparen, reduce: Termino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // greater, reduce: Termino
			reduce(50), // less, reduce: Termino
			reduce(50), // notequal, reduce: Termino
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S260
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(324), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(329), // cte_int
			shift(330), // cte_float
		},
	},
	actionRow{ // S261
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(331), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S262
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: Factor
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S263
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(53), // comma, reduce: Factor
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S264
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(333), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S265
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: Factor
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S266
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(53), // comma, reduce: Factor
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S267
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(49), // semicolon, reduce: Exp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S268
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(335), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(341), // cte_int
			shift(342), // cte_float
		},
	},
	actionRow{ // S269
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: Termino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(50), // plus, reduce: Termino
			reduce(50), // minus, reduce: Termino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S270
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(343), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(348), // cte_int
			shift(349), // cte_float
		},
	},
	actionRow{ // S271
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(350), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S272
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S273
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(53), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S274
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: Termino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // greater, reduce: Termino
			reduce(50), // less, reduce: Termino
			reduce(50), // notequal, reduce: Termino
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S275
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(352), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(357), // cte_int
			shift(358), // cte_float
		},
	},
	actionRow{ // S276
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(359), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S277
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S278
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(53), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S279
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(361), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S280
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S281
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(53), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S282
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(363), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S283
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			shift(301), // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S284
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			shift(365), // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S285
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(49), // rparen, reduce: Exp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S286
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(366), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(372), // cte_int
			shift(373), // cte_float
		},
	},
	actionRow{ // S287
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(50), // rparen, reduce: Termino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(50), // plus, reduce: Termino
			reduce(50), // minus, reduce: Termino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S288
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(374), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(379), // cte_int
			shift(380), // cte_float
		},
	},
	actionRow{ // S289
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(381), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S290
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S291
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S292
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(50), // rparen, reduce: Termino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(50), // greater, reduce: Termino
			reduce(50), // less, reduce: Termino
			reduce(50), // notequal, reduce: Termino
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S293
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(383), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(388), // cte_int
			shift(389), // cte_float
		},
	},
	actionRow{ // S294
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(390), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S295
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S296
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S297
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(392), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S298
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S299
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S300
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(394), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S301
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(34),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(26), // rbrace, reduce: StateDeclare
			nil,        // assign
			shift(42),  // if
			nil,        // else
			shift(43),  // while
			nil,        // do
			shift(44),  // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S302
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(46), // rparen, reduce: MorePrint
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S303
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			reduce(14), // main, reduce: Funcs
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			reduce(14), // void, reduce: Funcs
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S304
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			reduce(24), // rbracket, reduce: Body
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S305
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			shift(396), // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S306
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			shift(51), // void
			shift(52), // int
			shift(53), // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S307
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(54), // comma, reduce: Factor
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S308
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(63), // comma, reduce: MoreExp
			nil,        // lparen
			reduce(63), // rparen, reduce: MoreExp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S309
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(68), // comma, reduce: MoreTermino
			nil,        // lparen
			reduce(68), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S310
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S311
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(401), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(313), // cte_int
			shift(314), // cte_float
		},
	},
	actionRow{ // S312
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: Factor
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S313
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(71), // comma, reduce: Cte
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S314
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(72), // comma, reduce: Cte
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S315
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(54), // comma, reduce: Factor
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S316
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(67), // comma, reduce: MoreTermino
			nil,        // lparen
			reduce(67), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(67), // plus, reduce: MoreTermino
			reduce(67), // minus, reduce: MoreTermino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S317
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S318
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(404), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(320), // cte_int
			shift(321), // cte_float
		},
	},
	actionRow{ // S319
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: Factor
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S320
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(71), // comma, reduce: Cte
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S321
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(72), // comma, reduce: Cte
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S322
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: Terminar_Paren
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S323
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(51), // comma, reduce: Factor
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S324
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(54), // comma, reduce: Factor
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S325
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(67), // comma, reduce: MoreTermino
			nil,        // lparen
			reduce(67), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(67), // greater, reduce: MoreTermino
			reduce(67), // less, reduce: MoreTermino
			reduce(67), // notequal, reduce: MoreTermino
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S326
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S327
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(407), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(329), // cte_int
			shift(330), // cte_float
		},
	},
	actionRow{ // S328
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: Factor
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S329
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(71), // comma, reduce: Cte
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S330
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(72), // comma, reduce: Cte
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S331
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: Terminar_Paren
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			nil,        // plus
			nil,        // minus
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S332
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(51), // comma, reduce: Factor
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S333
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: Terminar_Paren
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S334
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(51), // comma, reduce: Factor
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S335
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(54), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S336
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(63), // semicolon, reduce: MoreExp
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S337
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(68), // semicolon, reduce: MoreTermino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S338
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S339
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(412), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(341), // cte_int
			shift(342), // cte_float
		},
	},
	actionRow{ // S340
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S341
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(71), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S342
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(72), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S343
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(54), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S344
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(67), // semicolon, reduce: MoreTermino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(67), // plus, reduce: MoreTermino
			reduce(67), // minus, reduce: MoreTermino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S345
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S346
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(415), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(348), // cte_int
			shift(349), // cte_float
		},
	},
	actionRow{ // S347
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S348
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(71), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S349
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(72), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S350
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: Terminar_Paren
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S351
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(51), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S352
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(54), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S353
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(67), // semicolon, reduce: MoreTermino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(67), // greater, reduce: MoreTermino
			reduce(67), // less, reduce: MoreTermino
			reduce(67), // notequal, reduce: MoreTermino
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S354
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S355
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(418), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(357), // cte_int
			shift(358), // cte_float
		},
	},
	actionRow{ // S356
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S357
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(71), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S358
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(72), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S359
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: Terminar_Paren
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			nil,        // plus
			nil,        // minus
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S360
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(51), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S361
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: Terminar_Paren
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S362
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(51), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S363
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(33), // id, reduce: Condition
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(33), // rbrace, reduce: Condition
			nil,        // assign
			reduce(33), // if, reduce: Condition
			nil,        // else
			reduce(33), // while, reduce: Condition
			nil,        // do
			reduce(33), // print, reduce: Condition
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S364
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(34), // semicolon, reduce: ElseBody
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S365
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(24), // semicolon, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			reduce(24), // else, reduce: Body
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S366
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(54), // times, reduce: Factor
			reduce(54), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S367
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(63), // rparen, reduce: MoreExp
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S368
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(68), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			shift(127), // times
			shift(128), // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S369
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S370
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(423), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(372), // cte_int
			shift(373), // cte_float
		},
	},
	actionRow{ // S371
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(55), // times, reduce: Factor
			reduce(55), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S372
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(71), // times, reduce: Cte
			reduce(71), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S373
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(72), // times, reduce: Cte
			reduce(72), // divide, reduce: Cte
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S374
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(54), // plus, reduce: Factor
			reduce(54), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S375
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(67), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(67), // plus, reduce: MoreTermino
			reduce(67), // minus, reduce: MoreTermino
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S376
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S377
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(426), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(379), // cte_int
			shift(380), // cte_float
		},
	},
	actionRow{ // S378
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(55), // plus, reduce: Factor
			reduce(55), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S379
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(71), // plus, reduce: Cte
			reduce(71), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S380
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(72), // plus, reduce: Cte
			reduce(72), // minus, reduce: Cte
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S381
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S382
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S383
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(54), // greater, reduce: Factor
			reduce(54), // less, reduce: Factor
			reduce(54), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S384
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(67), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(67), // greater, reduce: MoreTermino
			reduce(67), // less, reduce: MoreTermino
			reduce(67), // notequal, reduce: MoreTermino
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S385
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S386
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(429), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(388), // cte_int
			shift(389), // cte_float
		},
	},
	actionRow{ // S387
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(55), // greater, reduce: Factor
			reduce(55), // less, reduce: Factor
			reduce(55), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S388
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(71), // greater, reduce: Cte
			reduce(71), // less, reduce: Cte
			reduce(71), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S389
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(72), // greater, reduce: Cte
			reduce(72), // less, reduce: Cte
			reduce(72), // notequal, reduce: Cte
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S390
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			nil,        // plus
			nil,        // minus
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S391
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S392
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S393
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S394
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			reduce(36), // id, reduce: Cycle
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			reduce(36), // rbrace, reduce: Cycle
			nil,        // assign
			reduce(36), // if, reduce: Cycle
			nil,        // else
			reduce(36), // while, reduce: Cycle
			nil,        // do
			reduce(36), // print, reduce: Cycle
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S395
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			shift(431), // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S396
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			shift(51), // void
			shift(52), // int
			shift(53), // float
			nil,       // lbrace
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S397
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(433), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S398
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(50), // comma, reduce: Termino
			nil,        // lparen
			reduce(50), // rparen, reduce: Termino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S399
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(434), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(439), // cte_int
			shift(440), // cte_float
		},
	},
	actionRow{ // S400
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(441), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S401
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: Factor
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S402
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(53), // comma, reduce: Factor
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S403
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(443), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S404
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: Factor
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S405
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(53), // comma, reduce: Factor
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S406
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(445), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S407
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: Factor
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S408
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(53), // comma, reduce: Factor
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S409
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(50), // semicolon, reduce: Termino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S410
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(447), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(452), // cte_int
			shift(453), // cte_float
		},
	},
	actionRow{ // S411
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(454), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S412
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S413
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(53), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S414
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(456), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S415
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S416
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(53), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S417
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(458), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S418
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S419
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(53), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S420
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(50), // rparen, reduce: Termino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S421
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(460), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(465), // cte_int
			shift(466), // cte_float
		},
	},
	actionRow{ // S422
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(467), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S423
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(52), // times, reduce: Factor
			reduce(52), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S424
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(53), // times, reduce: Factor
			reduce(53), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S425
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(469), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S426
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(52), // plus, reduce: Factor
			reduce(52), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S427
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(53), // plus, reduce: Factor
			reduce(53), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S428
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(471), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S429
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(52), // greater, reduce: Factor
			reduce(52), // less, reduce: Factor
			reduce(52), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S430
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(53), // greater, reduce: Factor
			reduce(53), // less, reduce: Factor
			reduce(53), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S431
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(24), // semicolon, reduce: Body
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S432
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			shift(473), // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S433
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			reduce(6), // id, reduce: Variable
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			reduce(6), // lbrace, reduce: Variable
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S434
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(54), // comma, reduce: Factor
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S435
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(67), // comma, reduce: MoreTermino
			nil,        // lparen
			reduce(67), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S436
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S437
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(475), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(439), // cte_int
			shift(440), // cte_float
		},
	},
	actionRow{ // S438
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(55), // comma, reduce: Factor
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S439
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(71), // comma, reduce: Cte
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S440
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(72), // comma, reduce: Cte
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S441
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: Terminar_Paren
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S442
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(51), // comma, reduce: Factor
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S443
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: Terminar_Paren
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S444
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(51), // comma, reduce: Factor
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S445
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: Terminar_Paren
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S446
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(51), // comma, reduce: Factor
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S447
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(54), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S448
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(67), // semicolon, reduce: MoreTermino
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S449
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S450
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(478), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(452), // cte_int
			shift(453), // cte_float
		},
	},
	actionRow{ // S451
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(55), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S452
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(71), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S453
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(72), // semicolon, reduce: Cte
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S454
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: Terminar_Paren
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S455
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(51), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S456
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: Terminar_Paren
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S457
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(51), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S458
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: Terminar_Paren
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S459
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(51), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S460
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(54), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S461
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(67), // rparen, reduce: MoreTermino
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S462
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(94),  // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			shift(71),  // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			shift(80),  // plus
			shift(81),  // minus
			nil,        // times
			nil,        // divide
			shift(102), // cte_int
			shift(103), // cte_float
		},
	},
	actionRow{ // S463
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			shift(481), // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			shift(465), // cte_int
			shift(466), // cte_float
		},
	},
	actionRow{ // S464
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(55), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S465
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(71), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S466
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(72), // rparen, reduce: Cte
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S467
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(57), // times, reduce: Terminar_Paren
			reduce(57), // divide, reduce: Terminar_Paren
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S468
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			reduce(51), // times, reduce: Factor
			reduce(51), // divide, reduce: Factor
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S469
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(57), // plus, reduce: Terminar_Paren
			reduce(57), // minus, reduce: Terminar_Paren
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S470
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			reduce(51), // plus, reduce: Factor
			reduce(51), // minus, reduce: Factor
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S471
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(57), // greater, reduce: Terminar_Paren
			reduce(57), // less, reduce: Terminar_Paren
			reduce(57), // notequal, reduce: Terminar_Paren
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S472
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			reduce(51), // greater, reduce: Factor
			reduce(51), // less, reduce: Factor
			reduce(51), // notequal, reduce: Factor
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S473
		canRecover: false,
		actions: [numSymbols]action{
			nil,       // INVALID
			nil,       // ␚
			nil,       // program
			nil,       // id
			nil,       // semicolon
			nil,       // main
			nil,       // end
			nil,       // empty
			nil,       // var
			nil,       // colon
			nil,       // comma
			nil,       // lparen
			nil,       // rparen
			nil,       // lbracket
			nil,       // rbracket
			nil,       // void
			nil,       // int
			nil,       // float
			reduce(6), // lbrace, reduce: Variable
			nil,       // rbrace
			nil,       // assign
			nil,       // if
			nil,       // else
			nil,       // while
			nil,       // do
			nil,       // print
			nil,       // cte_string
			nil,       // greater
			nil,       // less
			nil,       // notequal
			nil,       // plus
			nil,       // minus
			nil,       // times
			nil,       // divide
			nil,       // cte_int
			nil,       // cte_float
		},
	},
	actionRow{ // S474
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(483), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S475
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(52), // comma, reduce: Factor
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S476
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(53), // comma, reduce: Factor
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S477
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(485), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S478
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(52), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S479
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(53), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S480
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			shift(487), // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S481
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(52), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S482
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(53), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S483
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(57), // comma, reduce: Terminar_Paren
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S484
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			reduce(51), // comma, reduce: Factor
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S485
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(57), // semicolon, reduce: Terminar_Paren
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S486
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			reduce(51), // semicolon, reduce: Factor
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			nil,        // rparen
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S487
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(57), // rparen, reduce: Terminar_Paren
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
	actionRow{ // S488
		canRecover: false,
		actions: [numSymbols]action{
			nil,        // INVALID
			nil,        // ␚
			nil,        // program
			nil,        // id
			nil,        // semicolon
			nil,        // main
			nil,        // end
			nil,        // empty
			nil,        // var
			nil,        // colon
			nil,        // comma
			nil,        // lparen
			reduce(51), // rparen, reduce: Factor
			nil,        // lbracket
			nil,        // rbracket
			nil,        // void
			nil,        // int
			nil,        // float
			nil,        // lbrace
			nil,        // rbrace
			nil,        // assign
			nil,        // if
			nil,        // else
			nil,        // while
			nil,        // do
			nil,        // print
			nil,        // cte_string
			nil,        // greater
			nil,        // less
			nil,        // notequal
			nil,        // plus
			nil,        // minus
			nil,        // times
			nil,        // divide
			nil,        // cte_int
			nil,        // cte_float
		},
	},
}
